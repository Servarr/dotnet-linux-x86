parameters:
- name: runtimeBranch
  displayName: Tag for runtime repository
  type: string
  default: v8.0.3
- name: aspBranch
  displayName: Tag for aspnetcore repository
  type: string
  default: v8.0.3
- name: sdkBranch
  displayName: Tag for sdk repository
  type: string
  default: v8.0.203
- name: aspireBranch
  displayName: Tag for aspire repository
  type: string
  default: v8.0.0-preview.4.24156.9
- name: installerBranch
  displayName: Tag for installer repository
  type: string
  default: v8.0.203

variables:
  runCounter: $[counter('runNumber', 1)]

resources:
  repositories:
  - repository: runtime
    type: github
    endpoint: Servarr
    name: dotnet/runtime
    ref: release/8.0
  - repository: aspnetcore
    type: github
    endpoint: Servarr
    name: dotnet/aspnetcore
    ref: release/8.0
  - repository: sdk
    type: github
    endpoint: Servarr
    name: dotnet/sdk
    ref: release/8.0.3xx
  - repository: aspire
    type: github
    endpoint: Servarr
    name: dotnet/aspire
    ref: release/8.0-preview4
  - repository: installer
    type: github
    endpoint: Servarr
    name: dotnet/installer
    ref: release/8.0.2xx

trigger:
  branches:
    include:
    - v8

pr:
- v8

stages:
  - stage: Runtime

    pool:
      vmImage: 'ubuntu-20.04'

    jobs:
      - job: Setup
        steps:
        - bash: |
            BRANCH=${{ parameters.runtimeBranch }}
            echo "##vso[build.updatebuildnumber]${BRANCH/\//-}-${RUNCOUNTER}"
          displayName: Set Build Name

      - job: Runtime
        timeoutInMinutes: 0
        steps:
          - checkout: self
          - checkout: runtime
          - bash: |
              set -e
              git -C runtime checkout ${{ parameters.runtimeBranch }}
              sed -i 's/return/__SkipCrossArchBuild=0/' runtime/src/coreclr/build-runtime.sh
              sed -i '/AppHostRuntimeIdentifier/d' runtime/src/coreclr/tools/aot/crossgen2/crossgen2.csproj
              sed -i '/\/dnceng\/internal\//d' runtime/NuGet.config
              sed -i '/PublishReadyToRun Condition/a \ \ \ \ <PublishReadyToRun>false<\/PublishReadyToRun>' runtime/src/installer/pkg/sfx/Microsoft.NETCore.App/Microsoft.NETCore.App.Runtime.props
              sed -i '/crossgen-corelib/d' runtime/eng/Subsets.props
            displayName: Checkout and patch
          - bash: |
              docker build -t dotnet-linux-x86 - < dotnet-linux-x86/Dockerfile
            displayName: Build cross root
          - bash: |
              source dotnet-linux-x86/common.sh
              calculate_build_id $(git -C runtime tag --points-at HEAD)
              echo $OFFICIALBUILDID

              docker run -v ${BUILD_SOURCESDIRECTORY}/runtime:/runtime dotnet-linux-x86 /runtime/eng/build.sh -ci -c Release -cross -os Linux -arch x86 /p:OfficialBuildId=$OFFICIALBUILDID -subset Clr.Native+Host.Native
              docker run -v ${BUILD_SOURCESDIRECTORY}/runtime:/runtime dotnet-linux-x86 /runtime/eng/build.sh -ci -c Release -cross -os Linux -arch x86 /p:OfficialBuildId=$OFFICIALBUILDID /p:AppHostSourcePath=/runtime/artifacts/obj/linux-x86.Release/apphost/standalone/apphost
            displayName: Build Runtime
            continueOnError: true
          - publish: '$(Build.SourcesDirectory)/runtime/artifacts/packages/Release/Shipping'
            artifact: RuntimePackages
            displayName: Publish Runtime

  - stage: Aspire
    dependsOn: []

    pool:
      vmImage: 'ubuntu-20.04'

    jobs:
      - job: Aspire
        timeoutInMinutes: 0
        steps:
          - checkout: self
          - checkout: aspire
          - bash: |
              set -e
              git -C aspire checkout ${{ parameters.aspireBranch }}
              sed -i '/\/dnceng\/internal\//d' aspire/NuGet.config
            displayName: Checkout and patch
          - bash: |
              aspire/build.sh --restore --build --pack --ci -c Release /p:OfficialBuildId=20231101.7
            displayName: Build SDK
          - publish: '$(Build.SourcesDirectory)/aspire/artifacts/packages/Release/Shipping/'
            artifact: AspirePackages
            displayName: Publish Aspire
          - publish: '$(Build.SourcesDirectory)/aspire/artifacts/log'
            condition: succeededOrFailed()
            artifact: AspireLogs
            displayName: Publish Build Logs

  - stage: Sdk
    dependsOn: []

    pool:
      vmImage: 'ubuntu-20.04'

    jobs:
      - job: Sdk
        timeoutInMinutes: 0
        steps:
          - checkout: self
          - checkout: sdk
          - bash: |
              set -e
              git -C sdk checkout ${{ parameters.sdkBranch }}
            displayName: Checkout and patch
          - bash: |
              source dotnet-linux-x86/common.sh
              calculate_build_id $(git -C sdk tag --points-at HEAD)
              echo $OFFICIALBUILDID
              sdk/build.sh -c Release -pack -ci /p:OfficialBuildId=$OFFICIALBUILDID
            displayName: Build SDK
          - publish: '$(Build.SourcesDirectory)/sdk/artifacts/packages/Release/NonShipping/'
            artifact: SdkPackages
            displayName: Publish SDK
          - publish: '$(Build.SourcesDirectory)/sdk/artifacts/log'
            condition: succeededOrFailed()
            artifact: SdkLogs
            displayName: Publish Build Logs

  - stage: AspNetCore
    dependsOn: Runtime
    pool:
      vmImage: 'ubuntu-20.04'
    jobs:
      - job: AspNetCore
        timeoutInMinutes: 0
        steps:
          - checkout: self
          - checkout: aspnetcore
            submodules: true
          - bash: |
              set -e
              git -C aspnetcore checkout ${{ parameters.aspBranch }}
              git -C aspnetcore submodule update --init
              sed -i 's/linux-x64;/&linux-x86;/' aspnetcore/Directory.Build.props
              sed -i '/<LatestPackageReference Include="Microsoft.NETCore.App.Runtime.linux-x64" \/>/a \ \ \ \ <LatestPackageReference Include="Microsoft.NETCore.App.Runtime.linux-x86" \/>' aspnetcore/eng/Dependencies.props
              dotnet nuget add source ../runtime/artifacts/packages/Release/Shipping --name local --configfile aspnetcore/NuGet.config
              sed -i '/\/dnceng\/internal\//d' aspnetcore/NuGet.config
            displayName: Checkout and patch
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: RuntimePackages
              targetPath: '$(Build.SourcesDirectory)/runtime/artifacts/packages/Release/Shipping'
              patterns: |
                dotnet-runtime-*-linux-x86.tar.gz
                Microsoft.*.linux-x86.*.nupkg
          - bash: |
              set -e
              source dotnet-linux-x86/common.sh
              calculate_build_id $(git -C aspnetcore tag --points-at HEAD)
              echo $OFFICIALBUILDID
              ls -lR runtime
              mkdir -p aspnetcore/artifacts/obj/Microsoft.AspNetCore.App.Runtime
              cp runtime/artifacts/packages/Release/Shipping/dotnet-runtime-*-linux-x86.tar.gz aspnetcore/artifacts/obj/Microsoft.AspNetCore.App.Runtime
              aspnetcore/eng/build.sh -c Release -ci -arch x86 -pack /p:CrossgenOutput=false /p:OfficialBuildId=$OFFICIALBUILDID
            displayName: Build AspNetCore
          - publish: '$(Build.SourcesDirectory)/aspnetcore/artifacts/packages/Release/Shipping'
            artifact: AspNetCorePackages
            displayName: Publish AspNetCore Packages
          - publish: '$(Build.SourcesDirectory)/aspnetcore/artifacts/installers/Release'
            artifact: AspNetCoreInstallers
            displayName: Publish AspNetCore Installers

  - stage: Installer
    dependsOn: 
     - AspNetCore
     - Aspire
    pool:
      vmImage: 'ubuntu-20.04'
    jobs:
      - job: Installer
        timeoutInMinutes: 0
        steps:
          - checkout: self
          - checkout: installer
          - bash: |
              set -e
              git -C installer checkout ${{ parameters.installerBranch }}
              dotnet nuget remove source msbuild --configfile installer/NuGet.config || true
              dotnet nuget remove source nuget-build --configfile installer/NuGet.config || true
              dotnet nuget add source ../runtime/artifacts/packages/Release/Shipping --name runtime --configfile installer/NuGet.config
              dotnet nuget add source ../aspnetcore/artifacts/packages/Release/Shipping --name aspnetcore --configfile installer/NuGet.config
              dotnet nuget add source ../aspire/artifacts/packages/Release/Shipping --name aspire --configfile installer/NuGet.config
              sed -i '/\/dnceng\/internal\//d' installer/NuGet.config
              sed -i 's/linux-s390x/linux-s390x;linux-x86/g' installer/src/redist/targets/GenerateBundledVersions.targets
            displayName: Apply patches
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: RuntimePackages
              targetPath: '$(Build.SourcesDirectory)/runtime/artifacts/packages/Release/Shipping'
              patterns: |
                dotnet-runtime-*-linux-x86.tar.gz
                Microsoft.*.linux-x86.*.nupkg
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: AspNetCorePackages
              targetPath: '$(Build.SourcesDirectory)/aspnetcore/artifacts/packages/Release/Shipping'
              patterns: |
                Microsoft.*.linux-x86.*.nupkg
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: AspirePackages
              targetPath: '$(Build.SourcesDirectory)/aspire/artifacts/packages/Release/Shipping'
              patterns: |
                Microsoft.*.nupkg
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: AspNetCoreInstallers
              targetPath: '$(Build.SourcesDirectory)/aspnetcore/artifacts/installers/Release'
              patterns: 'aspnetcore-runtime-*'
          - bash: |
              set -e
              source dotnet-linux-x86/common.sh
              calculate_build_id $(git -C installer tag --points-at HEAD)
              echo $OFFICIALBUILDID
              ls -lR runtime
              ls -lR aspnetcore
              mkdir -p installer/artifacts/obj/redist/Release/downloads/
              cp runtime/artifacts/packages/Release/Shipping/dotnet-runtime-*-linux-x86.tar.gz installer/artifacts/obj/redist/Release/downloads/
              cp aspnetcore/artifacts/installers/Release/aspnetcore-runtime-* installer/artifacts/obj/redist/Release/downloads/
              installer/build.sh -c Release -ci -pack --architecture x86 --runtime-id linux-x86 /p:DISABLE_CROSSGEN=True /p:OfficialBuildId=$OFFICIALBUILDID /p:IncludeAspNetCoreRuntime=True /p:HostRid=linux-x64
            displayName: Build Installer
          - publish: '$(Build.SourcesDirectory)/installer/artifacts/packages/Release/Shipping'
            artifact: Installer
            displayName: Publish Installer
