From 7cd3c80e10efa667f58a1dc0bbfbcc3150dacffa Mon Sep 17 00:00:00 2001
From: ta264 <ta264@users.noreply.github.com>
Date: Thu, 4 Mar 2021 09:54:55 +0000
Subject: [PATCH] Fix build for linux-x86

---
 src/coreclr/src/gc/unix/gcenv.unix.cpp   |  2 +-
 src/coreclr/src/md/inc/VerifyLayouts.inc |  4 ++--
 src/coreclr/src/pal/src/misc/sysinfo.cpp | 15 +++++++++------
 3 files changed, 12 insertions(+), 9 deletions(-)

diff --git a/src/coreclr/src/gc/unix/gcenv.unix.cpp b/src/coreclr/src/gc/unix/gcenv.unix.cpp
index fcba54551a8..6171cc575ba 100644
--- a/src/coreclr/src/gc/unix/gcenv.unix.cpp
+++ b/src/coreclr/src/gc/unix/gcenv.unix.cpp
@@ -771,7 +771,7 @@ bool GCToOSInterface::GetWriteWatch(bool resetState, void* address, size_t size,
     return false;
 }
 
-bool ReadMemoryValueFromFile(const char* filename, uint64_t* val)
+bool ReadMemoryValueFromFile(const char* filename, size_t* val)
 {
     bool result = false;
     char* line = nullptr;
diff --git a/src/coreclr/src/md/inc/VerifyLayouts.inc b/src/coreclr/src/md/inc/VerifyLayouts.inc
index 14e068ecefa..6aae6b0ffeb 100644
--- a/src/coreclr/src/md/inc/VerifyLayouts.inc
+++ b/src/coreclr/src/md/inc/VerifyLayouts.inc
@@ -156,7 +156,7 @@ FIELD(CLiteWeightStgdbRW, m_wszFileName, sizeof(void*))
 FIELD(CLiteWeightStgdbRW, m_dwDatabaseLFT, 4)
 FIELD(CLiteWeightStgdbRW, m_dwDatabaseLFS, 4)
 FIELD(CLiteWeightStgdbRW, m_pStgIO, sizeof(void*))
-END_TYPE(CLiteWeightStgdbRW, 8)
+END_TYPE(CLiteWeightStgdbRW, sizeof(void*))
 
 USING_ALIAS(CLiteWeightStgdb__CMiniMdRW__, CLiteWeightStgdb<CMiniMdRW>)
 BEGIN_TYPE(CLiteWeightStgdb__CMiniMdRW__, 0)
@@ -317,7 +317,7 @@ FIELD(CMiniTableDef, m_iKey, 1)
 FIELD(CMiniTableDef, m_cbRec, 1)
 END_TYPE(CMiniTableDef, sizeof(void*))
 
-BEGIN_TYPE(CMiniMdBase, 8)                                           //vtable ptr and first field 8-byte alignment
+BEGIN_TYPE(CMiniMdBase, sizeof(void*))                                           //vtable ptr and first field 8-byte alignment
 ALIGN_FIELD(CMiniMdBase, m_Schema, sizeof(CMiniMdSchema), 8)
 FIELD(CMiniMdBase, m_TblCount, 4)
 FIELD(CMiniMdBase, m_fVerifiedByTrustedSource, 4)
diff --git a/src/coreclr/src/pal/src/misc/sysinfo.cpp b/src/coreclr/src/pal/src/misc/sysinfo.cpp
index 6b23c17ac14..eecf0947f84 100644
--- a/src/coreclr/src/pal/src/misc/sysinfo.cpp
+++ b/src/coreclr/src/pal/src/misc/sysinfo.cpp
@@ -573,18 +573,21 @@ PAL_GetLogicalProcessorCacheSizeFromOS()
         // for the platform. Currently musl and arm64 should be only cases to use  
         // this method to determine cache size.
         // 
-        size_t size;
+        uint64_t size;
+	uint64_t maxSize = 0;
 
         if(ReadMemoryValueFromFile("/sys/devices/system/cpu/cpu0/cache/index0/size", &size))
-            cacheSize = std::max(cacheSize, size);
+            maxSize = std::max(maxSize, size);
         if(ReadMemoryValueFromFile("/sys/devices/system/cpu/cpu0/cache/index1/size", &size))
-            cacheSize = std::max(cacheSize, size);
+            maxSize = std::max(maxSize, size);
         if(ReadMemoryValueFromFile("/sys/devices/system/cpu/cpu0/cache/index2/size", &size))
-            cacheSize = std::max(cacheSize, size);
+            maxSize = std::max(maxSize, size);
         if(ReadMemoryValueFromFile("/sys/devices/system/cpu/cpu0/cache/index3/size", &size))
-            cacheSize = std::max(cacheSize, size);
+            maxSize = std::max(maxSize, size);
         if(ReadMemoryValueFromFile("/sys/devices/system/cpu/cpu0/cache/index4/size", &size))
-            cacheSize = std::max(cacheSize, size);
+            maxSize = std::max(maxSize, size);
+
+	cacheSize = (size_t)maxSize;
     }
 #endif
 
-- 
2.17.1

